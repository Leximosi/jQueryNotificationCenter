// Generated by CoffeeScript 1.3.3

/*
 * Copyright 2012 Erik Fr�rejean
 * Released under the MIT license
 * http://leximosi.github.com
*/


/*
NotificationCenter object instance
*/


(function() {
  var jQueryNotificationCenter, _jQueryNotificationCenterObject;

  _jQueryNotificationCenterObject = void 0;

  /*
  NotificationCenter class.
  Allows you to easily send notifications on OS X in supported
  browsers
  */


  jQueryNotificationCenter = (function() {

    jQueryNotificationCenter.PERMISSIONSET = 0;

    jQueryNotificationCenter.PERMISSIONNOTSET = 1;

    jQueryNotificationCenter.PERMISSIONSETBLOCKED = 2;

    function jQueryNotificationCenter(notificationTitle, notificationBody, notificationAction, notificationRequestAction, notificationBlockedAction) {
      this.notificationCenterAvailable = window.webkitNotifications === void 0 ? false : true;
      this.setNotification(notificationTitle, notificationBody, notificationAction);
      this.setRequestAction(notificationRequestAction);
      this.setBlockedAction(notificationBlockedAction);
    }

    /*
    Send a notification
    @param String notification The string that will be send
    */


    jQueryNotificationCenter.prototype.notify = function() {
      var notification,
        _this = this;
      switch (this.getPermission()) {
        case this.PERMISSIONSET:
          notification = webkitNotifications.createNotification(null, this.notificationTitle, this.notificationBody);
          if (this.notificationAction !== void 0) {
            notification.onclick = this.notificationAction;
          }
          return notification.show();
        case this.PERMISSIONNOTSET:
          return webkitNotifications.requestPermission(function() {
            return _this.notify();
          });
        case this.PERMISSIONSETBLOCKED:
          if (this.notificationBlockedAction !== void 0) {
            return this.notificationBlockedAction();
          }
      }
    };

    /*
    Returns whether the users browser supports Notification Center
    */


    jQueryNotificationCenter.prototype.hasNotificationCenter = function() {
      return this.notificationCenterAvailable;
    };

    /*
    Ask the user to give permission for this site.
    This can *only* be done if the user never did
    this before
    
    @param callback callback The action performed after the permission is set
    */


    jQueryNotificationCenter.prototype.askPermission = function(callback) {
      if (callback == null) {
        callback = this.notificationRequestAction();
      }
      return webkitNotifications.requestPermission(callback);
    };

    /*
    Get the permission the user gave to this site
    
    0 = User granted permission to show notifications.
    1 = No permission set yet.
    2 = User blocked notifications.
    */


    jQueryNotificationCenter.prototype.getPermission = function() {
      return webkitNotifications.checkPermission();
    };

    /*
    Setup the notification
    
    @param String notificationTitle
    @param String notificationBody
    @param callback notificationAction
    */


    jQueryNotificationCenter.prototype.setNotification = function(notificationTitle, notificationBody, notificationAction) {
      this.notificationTitle = notificationTitle != null ? notificationTitle : '';
      this.notificationBody = notificationBody != null ? notificationBody : '';
      this.notificationAction = notificationAction != null ? notificationAction : void 0;
    };

    /*
    Set the action performed after requesting permissions
    */


    jQueryNotificationCenter.prototype.setRequestAction = function(notificationRequestAction) {
      this.notificationRequestAction = notificationRequestAction != null ? notificationRequestAction : void 0;
    };

    /*
    Set the action performed when the user blocked notifications
    */


    jQueryNotificationCenter.prototype.setBlockedAction = function(notificationBlockedAction) {
      this.notificationBlockedAction = notificationBlockedAction != null ? notificationBlockedAction : void 0;
    };

    return jQueryNotificationCenter;

  })();

  /*
   * Copyright 2012 Erik Fr�rejean
   * Released under the MIT license
   * http://leximosi.github.com
  */


  (function($) {
    return $.extend(true, {
      'NotificationCenter': function(method) {
        var _arguments;
        if (_jQueryNotificationCenterObject === void 0) {
          _jQueryNotificationCenterObject = new jQueryNotificationCenter();
        }
        if (jQueryNotificationCenter.prototype[method] === void 0) {
          $.error("Method: " + method + " does not exist on jQueryNotificationCenter");
        }
        if (method === "hasNotificationCenter") {
          return _jQueryNotificationCenterObject.hasNotificationCenter();
        } else if (_jQueryNotificationCenterObject.hasNotificationCenter() === true) {
          _arguments = Array.prototype.slice.call(arguments, 1);
          return jQueryNotificationCenter.prototype[method].apply(_jQueryNotificationCenterObject, _arguments);
        }
      }
    });
  })(jQuery);

}).call(this);
